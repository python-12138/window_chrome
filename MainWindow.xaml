<Window x:Class="wpf_window_chrome.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpf_window_chrome"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="1024"  Background="Orange"  WindowStyle="None" AllowsTransparency="True" >


    

    <Window.Resources>
        
        <Storyboard x:Key="OnChecked">


            
            
            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="LeftGrid"
                         From="200" To="70" Duration="0:0:0.2" />
            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="RightGrid"
                            From="0" To="0,0,0,0" Duration="0:0:0.2" />


            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlockLogo">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>

            
      
        </Storyboard>
        <Storyboard x:Key="OnUnChecked">

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="LeftGrid">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
            
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlockLogo">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <TextBlock  x:Name="ico" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                            
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Text" TargetName="ico" Value="-&gt;">
                                    
                                </Setter>
                              
                            </Trigger>
                            
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Text" TargetName="ico" Value="&lt;-"></Setter>
                            </Trigger>
                            
                   

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="mytoggleButton">
            <BeginStoryboard  Storyboard="{StaticResource OnChecked}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="mytoggleButton">
            <BeginStoryboard Storyboard="{StaticResource OnUnChecked}"/>
        </EventTrigger>
    </Window.Triggers>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="50" x:Name="windowchrome" GlassFrameThickness="100" CornerRadius="10"  ></WindowChrome>
    </WindowChrome.WindowChrome>



    <Grid Margin="0" Background="#F2F2F2" x:Name="body" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid Background="#24262F" Grid.Column="0" Width="200" x:Name="LeftGrid" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid  Height="{Binding ElementName=windowchrome,Path=CaptionHeight}" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="图标" Margin="0,0,0,0" Foreground="White" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Grid.Column="1" Text="Admin PRO" x:Name="textBlockLogo" Foreground="White" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"  />
                </Grid>
            </Grid>
            
        </Grid>

        <Grid Grid.Column="1" x:Name="RightGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <!--第一行-->
            <Grid  Height="{Binding ElementName=windowchrome,Path=CaptionHeight}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ToggleButton Style="{DynamicResource ToggleButtonStyle}" x:Name="mytoggleButton" Height="auto" Width="50" HorizontalAlignment="Left" Content="&lt;-" FontSize="16"  WindowChrome.IsHitTestVisibleInChrome="True" Click="mytoggleButton_Click" ></ToggleButton>
                <Grid Grid.Column="1" HorizontalAlignment="Right">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" ></ColumnDefinition>
                        <ColumnDefinition Width="auto" ></ColumnDefinition>
                        <ColumnDefinition Width="auto" ></ColumnDefinition>
                        <ColumnDefinition Width="auto" ></ColumnDefinition>

                    </Grid.ColumnDefinitions>
                    <Border CornerRadius="20" Background="#FFededed">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" ></ColumnDefinition>
                                <ColumnDefinition Width="auto" ></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="20" Width="40" >
                                <TextBlock Text="X" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            </Border>
                            <TextBlock Grid.Column="1" Text="管理员" HorizontalAlignment="Left" VerticalAlignment="Center"  Background="Red"   FontSize="12" Margin="0,0,10,0"></TextBlock>
                        </Grid>
                    </Border>
                    <Button Cursor="Hand" Style="{DynamicResource ButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Column="1"  Content="-" Background="#00DDDDDD" Width="50" Click="Button_Click" x:Name="minButton"></Button>
                    <Button  Cursor="Hand" Style="{DynamicResource ButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True"  Grid.Column="2" Content="口"  Background="#00DDDDDD" Width="50" Click="Button_Click_1" x:Name="changeButton"></Button>
                    <Button Cursor="Hand" Style="{DynamicResource ButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True"  Grid.Column="3" Content="x" Background="#00DDDDDD" Width="50" FontSize="20" Click="Button_Click_2" x:Name="closeButton"></Button>
                </Grid>
            </Grid>
            <Button Grid.Row="1" Content="" Width="50" Height="50" Click="Button_Click_3" BorderThickness="0" Background="Transparent"></Button>

        </Grid>




    </Grid>
</Window>
